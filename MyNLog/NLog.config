<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <variable name="console" value="[console_target]" />
  <variable name="coloredConsole" value="[colored_console_target]" />

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--同名target,以最后一个为准-->
    <!--fileName相对路径-->
    <target name="logfile" xsi:type="File" fileName="file.txt" />
    <target name="logfile" xsi:type="File" fileName="logs/${date:format=\\Yyyyy\\MMM\\Ddd}.txt" layout="${longdate}|${level:uppercase=true}|${logger}|${threadid}|${message}|${exception:format=tostring}" />

    <!--设置超过指定size后归档,保留归档文件的数量maxArchiveFiles,archiveFileName可以重命名-->
    <!--{#}为占位符,不足的位数补0-->
    <target  name="errorFile" xsi:type="File"
           fileName="${basedir}/logs/${shortdate}.txt"
           deleteOldFileOnStartup="false"
           archiveAboveSize="1024" maxArchiveFiles="3" archiveFileName="${basedir}/logs/log.{###}.txt" archiveNumbering="DateAndSequence"
           layout="${longdate} ${callsite:className=false:methodName=false:fileName=true:includeSourcePath=false:skipFrames=2} ${message}" />


    <!--使用variable的2种格式-->
    <target name="logconsole" xsi:type="Console" layout="${longdate} ${var:console} ${console} ${message}" />

    <!--按level整行高亮,按text/regex高亮关键字-->
    <target name="myConsole"
      xsi:type="ColoredConsole"
      layout="${uppercase:${level}}: ${message} ${exception:innerFormat=Message,StackTrace}"
      header="Memoriez API"
      useDefaultRowHighlightingRules="false"
          >
      <highlight-word foregroundColor="Green" ignoreCase="true" text="info" wholeWords="true" />
      <highlight-word foregroundColor="Red" ignoreCase="true" text="warn" wholeWords="true" />
      <highlight-word backgroundColor="Red" foregroundColor="White" ignoreCase="true" text="error" wholeWords="true" />
      <highlight-word foregroundColor="White" backgroundColor="Blue" regex="my" />
      <highlight-row condition="level == LogLevel.Warn" foregroundColor="DarkGreen" />
      <highlight-row backgroundColor="DarkRed" foregroundColor="Yellow" condition="level >= LogLevel.Error" />
    </target>


    <target name="mydb"
            xsi:type="Database"
            dbProvider="System.Data.SqlClient"
            commandText="insert into [log] (date,Thread,Level,Logger,Message,Exception)values (@date,@Thread,@Level,@Logger,@Message,@Exception)"
            connectionString="data source=.;initial catalog=test;user id=sa;password=Sa2014;">
      <parameter name="@date" layout="${date:format=yyyy\-MM\-dd HH\:mm\:ss.fff}"/>
      <parameter name="@Thread" layout="${threadid}" />
      <parameter name="@Level" layout="${level:uppercase=true}" />
      <parameter name="@Logger" layout="${logger}" />
      <parameter name="@Message" layout="${message}" />
      <parameter name="@Exception" layout="${exception:format=tostring}" />
    </target>

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
  </targets>

  <rules>
    <!-- add your logging rules here -->

    <!--writeTo用,隔开-->
    <logger name="*" minlevel="Info" writeTo="logconsole,logfile,mydb" />
    <logger name="*" minlevel="Error" writeTo="errorFile" />
    <!--指定loggername,此logger发出的日志,同时会被上面*的logger捕获-->
    <logger name="mylogger" level="Error" writeTo="myConsole"/>

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
  </rules>
</nlog>
